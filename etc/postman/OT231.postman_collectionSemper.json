{
	"info": {
		"_postman_id": "e0a1788d-aeba-4843-804e-581744f332d9",
		"name": "OT231",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18095139"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"pm.test(\"Response should be JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response should contain token\", function() {",
									"    pm.response.to.have.jsonBody(\"token\");",
									"",
									"    // SETS USER_TOKEN ENVIROMENT VARIABLE",
									"    pm.collectionVariables.unset(\"USER_TOKEN\")",
									"    var response = JSON.parse(responseBody);",
									"    pm.collectionVariables.set(\"USER_TOKEN\", `${response.token}`);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Michael\",\n    \"lastName\": \"Myers\",\n    \"email\": \"michael@myers.com\",\n    \"password\": \"abdc1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Request body must contain:\n\n*   `firstName` : `String` (only letters & whitespaces)\n*   `lastName` : `String` (idem firstName)\n*   `email` : `String` (valid email)\n*   `password` : `String` (min 6 & max 8 characters)\n    \n\nThis is a public endpoint, there is no need for a jwt token."
					},
					"response": [
						{
							"name": "Register User Successful",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Michael\",\n    \"lastName\": \"Myers\",\n    \"email\": \"michael@myers.com\",\n    \"password\": \"abdc1234\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/auth/register",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"firstName\": \"Michael\",\n    \"lastName\": \"Myers\",\n    \"email\": \"michael@myers.com\",\n    \"token\": \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdXRob3JpdGllcyI6IlJPTEVfVVNFUiIsInN1YiI6Im1pY2hhZWxAbXllcnMuY29tIiwiaWF0IjoxNjU2NDI5MDExLCJleHAiOjE2NTY0MzA4MTF9.uDaGTvLpc3d0fnARL8F3uV0c6Q7dQHU_fbb6O78rnrI\"\n}"
						},
						{
							"name": "Register User Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Michael\",\n    \"lastName\": \"Myers\",\n    \"email\": \"michael@myers.com\",\n    \"password\": \"abdc1234\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/auth/register",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 400,\n    \"message\": \"Invalid input data.\",\n    \"moreInfo\": [\n        \"Email address: michael@myers.com is already being used\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Delete User by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/users/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Information",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"response": [
						{
							"name": "User Information",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/auth/me",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"email\": \"mark@facebook.com\",\n    \"firstName\": \"Mark\",\n    \"lastName\": \"Zuckerberg\",\n    \"photo\": null\n}"
						}
					]
				},
				{
					"name": "List Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "List Users Successful",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/users",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 05 Jul 2022 01:05:45 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"users\": [\n        {\n            \"email\": \"jason@voorhees.com\",\n            \"firstName\": \"Jason\",\n            \"lastName\": \"Voorhees\",\n            \"photo\": null\n        },\n        {\n            \"email\": \"freddy@krueger.com\",\n            \"firstName\": \"Freddy\",\n            \"lastName\": \"Krueger\",\n            \"photo\": null\n        },\n        {\n            \"email\": \"michael@myers.com\",\n            \"firstName\": \"Michael\",\n            \"lastName\": \"Myers\",\n            \"photo\": null\n        },\n        {\n            \"email\": \"pamela@voorhees.com\",\n            \"firstName\": \"Pamela\",\n            \"lastName\": \"Voorhees\",\n            \"photo\": null\n        },\n        {\n            \"email\": \"leather@face.com\",\n            \"firstName\": \"Leatherface\",\n            \"lastName\": \"Unknown\",\n            \"photo\": null\n        },\n        {\n            \"email\": \"mark@facebook.com\",\n            \"firstName\": \"Mark\",\n            \"lastName\": \"Zuckerberg\",\n            \"photo\": null\n        },\n        {\n            \"email\": \"bill@windows.com\",\n            \"firstName\": \"Bill\",\n            \"lastName\": \"Gates\",\n            \"photo\": null\n        },\n        {\n            \"email\": \"jeff@amazon.com\",\n            \"firstName\": \"Jeff\",\n            \"lastName\": \"Bezos\",\n            \"photo\": null\n        },\n        {\n            \"email\": \"elon@tesla.com\",\n            \"firstName\": \"Elon\",\n            \"lastName\": \"Musk\",\n            \"photo\": null\n        },\n        {\n            \"email\": \"jack@twitter.com\",\n            \"firstName\": \"Jack\",\n            \"lastName\": \"Dorsey\",\n            \"photo\": null\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Members",
			"item": [
				{
					"name": "Members",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/members/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "Create Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"news\",\n    \"description\":\"This is a description.\",\n    \"image\":\"http://www.s3.com/news.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/categories",
							"host": [
								"{{URL}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/categories/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Category by Id",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "News",
			"item": [
				{
					"name": "Create News",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"These are incredible news!\",\n    \"text\":\"This is a content.\",\n    \"image\":\"http://www.s3.com/incredibleNews.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/news",
							"host": [
								"{{URL}}"
							],
							"path": [
								"news"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete News by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/news/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"news",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Testimonials",
			"item": [
				{
					"name": "Delete Testimonial by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/testimonials/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"testimonials",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Organization",
			"item": [
				{
					"name": "Public Organization Details",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/organization/public",
							"host": [
								"{{URL}}"
							],
							"path": [
								"organization",
								"public"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Contacts",
			"item": [
				{
					"name": "Create Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Juan Manuel Carrizo\",\n    \"phone\":\"+54 9 300 123456\",\n    \"email\":\"jmcarrizo@alkemy.com\",\n    \"message\":\"This is a Message :D\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/contacts",
							"host": [
								"{{URL}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Contacts",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/contacts",
							"host": [
								"{{URL}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Slides",
			"item": [
				{
					"name": "List Slides",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/slides",
							"host": [
								"{{URL}}"
							],
							"path": [
								"slides"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Create Comment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{USER_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"muy bueno todo 1234\",\r\n    \"createBy\": \r\n        {\r\n            \"firstName\":\"Michael\",\r\n            \"lastName\": \"Myers\"\r\n        },\r\n    \"associatedNews\":\"Pelota\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Activities",
			"item": [
				{
					"name": "Create Activity",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdXRob3JpdGllcyI6IlJPTEVfQURNSU4iLCJzdWIiOiJmcmVkZHlAa3J1ZWdlci5jb20iLCJpYXQiOjE2NTczODYyNzQsImV4cCI6MTY1NzM4ODA3NH0.k_Wy0zy43SmXAvZWCDnZoZdA2or6VznknljK9iY1JyI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"nombreActivity\",\r\n    \"content\":\"This is a content of activity.\",\r\n    \"image\":\"http://www.s3.com/activityII.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/activities",
							"host": [
								"{{URL}}"
							],
							"path": [
								"activities"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response should be JSON\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Response should contain token\", function() {",
							"    pm.response.to.have.jsonBody(\"token\");",
							"})",
							"",
							"var response = JSON.parse(responseBody);",
							"",
							"// SETS ADMIN_TOKEN COLLECTION VARIABLE",
							"if(`${response.email}` == \"jason@voorhees.com\"){",
							"    pm.collectionVariables.unset(\"ADMIN_TOKEN\");",
							"    pm.collectionVariables.set(\"ADMIN_TOKEN\", `${response.token}`);",
							"}",
							"",
							"// SETS USER_TOKEN COLLECTION VARIABLE",
							"if(`${response.email}` == \"mark@facebook.com\"){",
							"    pm.collectionVariables.unset(\"USER_TOKEN\");",
							"    pm.collectionVariables.set(\"USER_TOKEN\", `${response.token}`);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"freddy@krueger.com\",\n    \"password\": \"abcd1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/auth/login",
					"host": [
						"{{URL}}"
					],
					"path": [
						"auth",
						"login"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Request body must contain:\n\n*   `email` : `String` (valid email)\n*   `password` : `String` (min 6 & max 8 characters)\n    \n\nThis is a public endpoint, there is no need for a jwt token.\n\nIf email and credentials are valid, the response should contain the User information and a jwt token.\n\n| **Admin Users Emails** | **Regular User Emails** |\n| --- | --- |\n| [jason@voorhees.com](mailto:jason@voorhees.com) | [mark@facebook.com](mailto:mark@facebook.com) |\n| [freddy@krueger.com](mailto:freddy@krueger.com) | [bill@windows.com](mailto:bill@windows.com) |\n| [michael@myers.com](mailto:michael@myers.com) | [jeff@amazon.com](mailto:jeff@amazon.com) |\n| [pamela@voorhees.com](mailto:pamela@voorhees.com) | [elon@tesla.com](mailto:elon@tesla.com) |\n| [leather@face.com](mailto:leather@face.com) | [jack@twitter.com](mailto:jack@twitter.com) |\n\n| **Default Password** | **abdc1234** |\n| --- | --- |"
			},
			"response": [
				{
					"name": "Admin Auth Successful",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"jason@voorhees.com\",\n    \"password\": \"abcd1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/auth/login",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"email\": \"jason@voorhees.com\",\n    \"firstName\": \"Jason\",\n    \"lastName\": \"Voorhees\",\n    \"photo\": null,\n    \"token\": \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdXRob3JpdGllcyI6IlJPTEVfQURNSU4iLCJzdWIiOiJqYXNvbkB2b29yaGVlcy5jb20iLCJpYXQiOjE2NTY0NDYxNjMsImV4cCI6MTY1NjQ0Nzk2M30.hMRGdZc2OaB8WQeM6eV2-a0MxNyGvwwE75ROnJbcpAw\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "USER_TOKEN",
			"value": "",
			"type": "string"
		},
		{
			"key": "ADMIN_TOKEN",
			"value": "",
			"type": "string"
		},
		{
			"key": "URL",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}